# Code by Darmo.
# See https://darmo-creations.herokuapp.com/ipa-generator/.

_CODE_TO_IPA = {
    ' ': ' ',
    ':': 'ː',
    '.:': 'ˑ',
    "'_": '\u0329',
    "''": 'ˌ',
    "'": 'ˈ',
    '.': '.',
    '))': '\u203f',
    '"': 'ʼ',
    '+': '\u031f',
    '_': '\u0320',
    '{/': '\u031d',
    '}/': '\u031e',
    '°_': '\u0325',
    '°': '\u030a',
    '^_': '\u032c',
    ')_': '\u0339',
    '(_': '\u031c',
    '^': '\u0361',
    '[]': '\u033b',
    '[': '\u032a',
    ']': '\u033a',
    '$': '\u033c',
    'l*': 'ˡ',
    'm*': 'ᵐ',
    'n*': 'ⁿ',
    'n,/*': 'ᶮ',
    'n;*': 'ᵑ',
    'T*': '\u031a',
    'r*': '˞',
    '¨_': '\u0324',
    '~_': '\u0330',
    'w*': 'ʷ',
    'j*': 'ʲ',
    'y*': 'ˠ',
    '?*': 'ˁ',
    'h*': 'ʰ',
    '(/_': '\u032f',
    '{': '\u0318',
    '}': '\u0319',
    '¨': '\u0308',
    'x*': '\u033d',
    '~': '\u0303',
    ')^': '\u0306',
    '|5*': '˥',
    '|4*': '˦',
    '|3*': '˧',
    '|2*': '˨',
    '|1*': '˩',
    '|1`|5`': '\u030c',
    '|5`|1`': '\u0302',
    '|4`|5`|4`': '\u1dc8',
    '|4`|5`': '\u1dc4',
    '|1`|2`': '\u1dc5',
    '|5`': '\u030b',
    '|4`': '\u0301',
    '|3`': '\u0304',
    '|2`': '\u0300',
    '|1`': '\u030f',
    '1*': '¹',
    '2*': '²',
    '3*': '³',
    '4*': '⁴',
    '5*': '⁵',
    'y/': 'ʎ',
    'y,': 'ɤ',
    'y': 'y',
    'i-': 'ɨ',
    'i': 'i',
    'u-': 'ʉ',
    'u': 'u',
    'm/': 'ɯ',
    'I': 'ɪ',
    'Y': 'ʏ',
    'U': 'ʊ',
    'o/': 'ø',
    'e\\': 'ɘ',
    'o-': 'ɵ',
    'o_e': 'œ',
    'o': 'o',
    'e/r*': 'ɚ',
    'e/': 'ə',
    'e': 'e',
    'E/r*': 'ɝ',
    'E/': 'ɜ',
    'E': 'ɛ',
    '(E/': 'ɞ',
    'v/': 'ʌ',
    'O_E': 'ɶ',
    'O': 'ɔ',
    'a_e': 'æ',
    'a/': 'ɐ',
    'a': 'a',
    'A/': 'ɒ',
    'A': 'ɑ',
    'm;': 'ɱ',
    'm': 'm',
    'M/': 'ɰ',
    'n,/': 'ɲ',
    'n,': 'ɳ',
    'n;': 'ŋ',
    'n': 'n',
    'N': 'ɴ',
    'p': 'p',
    'b`': 'ɓ',
    'b': 'b',
    't,': 'ʈ',
    't': 't',
    'd`,': 'ᶑ',
    'd,': 'ɖ',
    'd`': 'ɗ',
    'd': 'd',
    'c;': 'ɕ',
    'c': 'c',
    'f/': 'ɟ',
    'f': 'f',
    'k': 'k',
    'g`': 'ɠ',
    'g': 'ɡ',
    'q': 'q',
    'G`': 'ʛ',
    'G': 'ɢ',
    '?-/': 'ʢ',
    '?-': 'ʡ',
    '?/': 'ʕ',
    '?': 'ʔ',
    'F': 'ɸ',
    '8': 'β',
    'B': 'ʙ',
    'v,': 'ⱱ',
    'v;': 'ʋ',
    'v': 'v',
    'T': 'θ',
    'D': 'ð',
    's,': 'ʂ',
    's': 's',
    'z,': 'ʐ',
    'z;': 'ʑ',
    'z': 'z',
    'S-': 'ʄ',
    'S': 'ʃ',
    'Z': 'ʒ',
    'ç': 'ç',
    'j;': 'ʝ',
    'j': 'j',
    'x': 'x',
    'Q': 'ɣ',
    'X': 'χ',
    'H': 'ʜ',
    'h`,': 'ɧ',
    'h`': 'ɦ',
    'h-': 'ħ',
    'h/': 'ɥ',
    'h': 'h',
    'r/,': 'ɻ',
    'r/': 'ɹ',
    'r_': 'ɾ',
    'r,': 'ɽ',
    'r`,': 'ɺ\u0322',
    'r`': 'ɺ',
    'r': 'r',
    'w/': 'ʍ',
    'w': 'w',
    'R\\': 'ᴙ',
    'R/': 'ʁ',
    'R': 'ʀ',
    'l;,': '\ua78e',
    'l;': 'ɬ',
    'l,': 'ɭ',
    'l#': 'ɮ',
    'l': 'l',
    'L': 'ʟ',
    '@': 'ʘ',
    '|/': 'ǁ',
    '|=': 'ǂ',
    '|': 'ǀ',
    '!': 'ǃ',
}


def code_to_ipa(code: str) -> str:
    """Converts an encoded string into IPA symbols."""
    i = 0
    ipa_string = ''
    while i < len(code):
        for phonem_code, symbol in _CODE_TO_IPA.items():
            if code[i:i + len(phonem_code)] == phonem_code:
                ipa_string += symbol
                i += len(phonem_code)
                break
        else:
            raise ValueError(f'Unknown symbol {code[i]}')
    return ipa_string


def ipa_to_code(ipa: str) -> str:
    code = ''
    for c in ipa:
        for k, v in _CODE_TO_IPA.items():
            if v == c:
                code += k
                break
        else:
            raise ValueError(f'Unknown API symbol {c}')
    return code
